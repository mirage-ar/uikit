{"version":3,"file":"ConnectModal.jsx","sourceRoot":"","sources":["ConnectModal.tsx"],"names":[],"mappings":"AAAA;;;;uFAIuF;AACvF,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,2BAA2B,CAAC;AAC/C,OAAO,KAAK,MAAM,YAAY,CAAC;AAC/B,OAAO,MAAM,MAAM,UAAU,CAAC;AAwB9B,YAAY;AACZ,yEAAyE;AAEzE,IAAM,YAAY,GAAgC,UAAC,EAOlD;QANC,MAAM,YAAA,EACN,WAAW,iBAAA,EACX,SAAS,eAAA,EACT,OAAO,aAAA,EACP,UAAU,gBAAA,EACV,OAAO,aAAA;IAEP,IAAM,iBAAiB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEnD,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAEtC,IAAM,aAAa,GAAG,UAAC,IAAY;QACjC,IAAM,SAAS,GAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,IAAI,CAAC,UAAC,SAAS,IAAK,OAAA,SAAS,CAAC,IAAI,IAAI,IAAI,EAAtB,CAAsB,CAAC,CAAC;QAC1E,OAAO,CAAC,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;IACzB,CAAC,CAAC;IAEF,IAAM,oBAAoB,GAAG,UAC3B,CAA4C;QAE5C,IAAI,CAAC,CAAC,MAAM,KAAK,UAAU,CAAC,OAAO,EAAE;YACnC,WAAW,EAAE,CAAC;SACf;IACH,CAAC,CAAC;IAEF,IAAI,SAAS,EAAE;QACb,OAAO,CACL,EACE;QAAA,CAAC,OAAO,CAAC,AAAD,EACV;MAAA,GAAG,CACJ,CAAC;KACH;IAED,IAAI,OAAO,EAAE;QACX,OAAO,CACL,EACE;QAAA,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,EACxD;MAAA,GAAG,CACJ,CAAC;KACH;IAED,IAAI,MAAM,EAAE;QACV,OAAO,CACL,EACE;QAAA,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,UAAU,CAAC,CAChB,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAC/B,OAAO,CAAC,CAAC,oBAAoB,CAAC,EAEhC;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,iBAAiB,CAAC,CAChC;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAChC;YAAA,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CACpB;YAAA,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,WAAW,EAAE,EAAb,CAAa,CAAC,CAC9D;cAAA,CAAC,KAAK,CACJ,GAAG,CAAC,oBAAoB,CACxB,GAAG,CAAC,eAAe,CACnB,SAAS,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAC7B,KAAK,CAAC,CAAC,EAAE,CAAC,CACV,MAAM,CAAC,CAAC,EAAE,CAAC,CACX,OAAO,CAAC,CAAC,GAAG,CAAC,EAEjB;YAAA,EAAE,GAAG,CACP;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAClC;YAAA,CAAC,MAAM,CACL,IAAI,CAAC,UAAU,CACf,KAAK,CAAC,CAAC,OAAO,CAAC,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,aAAa,CAAC,UAAU,CAAC,EAAzB,CAAyB,CAAC,CAEzC;;YACF,EAAE,MAAM,CACR;YAAA,CAAC,MAAM,CACL,IAAI,CAAC,eAAe,CACpB,KAAK,CAAC,CAAC,OAAO,CAAC,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,aAAa,CAAC,eAAe,CAAC,EAA9B,CAA8B,CAAC,CAE9C;;YACF,EAAE,MAAM,CACR;YAAA,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CACtC;;YACF,EAAE,MAAM,CACV;UAAA,EAAE,GAAG,CACP;QAAA,EAAE,GAAG,CACP;MAAA,GAAG,CACJ,CAAC;KACH;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,IAAM,OAAO,GAAa,cAAM,OAAA,CAC9B,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAC/B;IAAA,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAC5B;MAAA,CAAC,GAAG,CAAC,GAAG,CAAC,qBAAqB,EAChC;IAAA,EAAE,GAAG,CACL;IAAA,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,6BAA6B,EAAE,CAAC,CACpE;EAAA,EAAE,GAAG,CAAC,CACP,EAP+B,CAO/B,CAAC;AAQF,IAAM,SAAS,GAA6B,UAAC,EAI5C;QAHC,OAAO,aAAA,EACP,WAAW,iBAAA,EACX,UAAU,gBAAA;IAEV,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAC/B;MAAA,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CACrD;QAAA,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAC9B;MAAA,EAAE,MAAM,CACR;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CACjC;qBAAa,CAAC,OAAO,CACrB;QAAA,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,UAAU,EAAE,EAAZ,CAAY,CAAC,CAC3D;;QACF,EAAE,CAAC,CACL;MAAA,EAAE,GAAG,CACP;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,YAAY,CAAC","sourcesContent":["/**----------------------------------------------------------------------------------\n * The connect module component\n * Mirage UI Kit (( v1.0 ))\n * @author fiig, max <fiig@mirage.space, max@mirage.space> | January 9, 2023 | Updated: January 9, 2023\n * ----------------------------------------------------------------------------------*/\nimport React from \"react\";\nimport styles from \"./ConnectModal.module.css\";\nimport Image from \"next/image\";\nimport Button from \"./Button\";\n\ninterface ConnectModalProps {\n  isOpen: Boolean;\n  address?: string;\n  toggleModal: any;\n  isLoading: Boolean;\n  connectors?: Array<WagmiConnector>;\n  connect?: any;\n  disconnect?: any;\n  error?: any;\n}\n\ninterface WagmiConnector {\n  id: string;\n  name?: String;\n  ready: Boolean;\n}\n\ninterface ConnectArgs {\n  chainId?: number;\n  connector: WagmiConnector;\n}\n\n// error JSX\n//  {error && <div className={styles.errorMessage}>{error.message}</div>}\n\nconst ConnectModal: React.FC<ConnectModalProps> = ({\n  isOpen,\n  toggleModal,\n  isLoading,\n  address,\n  connectors,\n  connect,\n}) => {\n  const connectModalClass = [styles.modal].join(\" \");\n\n  const outsideRef = React.useRef(null);\n\n  const connectWallet = (name: string) => {\n    const connector = connectors?.find((connector) => connector.name == name);\n    connect({ connector });\n  };\n\n  const handleCloseOnOverlay = (\n    e: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    if (e.target === outsideRef.current) {\n      toggleModal();\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <>\n        <Loading />\n      </>\n    );\n  }\n\n  if (address) {\n    return (\n      <>\n        <Connected address={address} toggleModal={toggleModal} />\n      </>\n    );\n  }\n\n  if (isOpen) {\n    return (\n      <>\n        <div\n          ref={outsideRef}\n          className={styles.modalOverlay}\n          onClick={handleCloseOnOverlay}\n        />\n        <div className={connectModalClass}>\n          <div className={styles[\"--title\"]}>\n            <p>CONNECT WALLET</p>\n            <div style={{ cursor: \"pointer\" }} onClick={() => toggleModal()}>\n              <Image\n                src=\"/icons/black-x.svg\"\n                alt=\"A live symbol\"\n                className={styles[\"--image\"]}\n                width={24}\n                height={24}\n                quality={100}\n              />\n            </div>\n          </div>\n          <div className={styles[\"--content\"]}>\n            <Button\n              icon=\"metamask\"\n              color={\"black\"}\n              onClick={() => connectWallet(\"MetaMask\")}\n            >\n              METAMASK\n            </Button>\n            <Button\n              icon=\"walletconnect\"\n              color={\"black\"}\n              onClick={() => connectWallet(\"WalletConnect\")}\n            >\n              WALLETCONNECT\n            </Button>\n            <Button secondary={true} color={\"black\"}>\n              WHAT&#39;S A WALLET\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return null;\n};\n\nconst Loading: React.FC = () => (\n  <div className={styles.container}>\n    <div className={styles.button}>\n      <img src=\"/images/spinner.gif\" />\n    </div>\n    <p className={styles.connectText}>Check your wallet application</p>\n  </div>\n);\n\ninterface ConnectedProps {\n  address: string;\n  toggleModal: any;\n  disconnect?: any;\n}\n\nconst Connected: React.FC<ConnectedProps> = ({\n  address,\n  toggleModal,\n  disconnect,\n}) => {\n  return (\n    <div className={styles.container}>\n      <button className={styles.button} onClick={toggleModal}>\n        <img src=\"/images/check.svg\" />\n      </button>\n      <div className={styles.connectText}>\n        Connected as {address}\n        <a style={{ cursor: \"pointer\" }} onClick={() => disconnect()}>\n          Disconnect\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectModal;\n"]}